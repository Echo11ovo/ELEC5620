import sqlite3
import csv


def queryData(query):
    # db_file = analysisdata.db
    # query: sql query generated by GPT-3
    db_file = './instance/analysisdata.db'
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    sql_query = query
    try:
        cursor.execute(sql_query)
        dataRequired = cursor.fetchall()
        headers = [description[0] for description in cursor.description]
        return headers, dataRequired

    except Exception as e:
        print(f"Error: {e}")
        return None, None

    finally:
        cursor.close()
        conn.close()


# Process data format
def displayData(headers, dataRequired):
    # headers: headers returned from queryData()
    # dataRequired: data returned from queryData()
    # return data in a readable format
    if headers is not None and dataRequired is not None:
        data = []
        for row in dataRequired:
            row = list(row)
            data.append(dict(zip(headers, row)))
        return data

# Write data to .csv file


def generateCSV(headers, dataRequired, output_file):
    # dataRequired: data returned from queryData()
    # write data to .csv file
    if headers is not None and dataRequired is not None:
        try:
            with open(output_file, mode='w', newline='') as file:
                writer = csv.writer(file)
                writer.writerow(headers)  # Write the header
                writer.writerows(dataRequired)  # Write the data rows
            return True
        except Exception as e:
            print(f"Error writing to CSV: {e}")
    return False
